/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Protocol.ChannelStreaming;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ChannelMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2944721556387590561L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChannelMetadata\",\"namespace\":\"Energistics.Protocol.ChannelStreaming\",\"fields\":[{\"name\":\"channels\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ChannelMetadataRecord\",\"namespace\":\"Energistics.Datatypes.ChannelData\",\"fields\":[{\"name\":\"channelUri\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"channelId\",\"type\":\"long\"},{\"name\":\"indexes\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"IndexMetadataRecord\",\"fields\":[{\"name\":\"indexType\",\"type\":{\"type\":\"enum\",\"name\":\"ChannelIndexTypes\",\"symbols\":[\"Time\",\"Depth\"]}},{\"name\":\"uom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"depthDatum\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"IndexDirections\",\"symbols\":[\"Increasing\",\"Decreasing\"]}},{\"name\":\"mnemonic\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"uri\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"DataValue\",\"namespace\":\"Energistics.Datatypes\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"double\",\"float\",\"int\",\"long\",{\"type\":\"string\",\"avro.java.string\":\"String\"},{\"type\":\"record\",\"name\":\"ArrayOfDouble\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":\"double\"}}]},\"boolean\",\"bytes\"]}]},\"avro.java.string\":\"String\"}},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"timeDatum\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}}},{\"name\":\"channelName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"dataType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"uom\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"startIndex\",\"type\":[\"null\",\"long\"]},{\"name\":\"endIndex\",\"type\":[\"null\",\"long\"]},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"ChannelStatuses\",\"symbols\":[\"Active\",\"Inactive\",\"Closed\"]}},{\"name\":\"contentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"source\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"measureClass\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":\"Energistics.Datatypes.DataValue\",\"avro.java.string\":\"String\"}},{\"name\":\"domainObject\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DataObject\",\"namespace\":\"Energistics.Datatypes.Object\",\"fields\":[{\"name\":\"resource\",\"type\":{\"type\":\"record\",\"name\":\"Resource\",\"fields\":[{\"name\":\"uri\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"contentType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"channelSubscribable\",\"type\":\"boolean\"},{\"name\":\"customData\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}},{\"name\":\"resourceType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hasChildren\",\"type\":\"int\"},{\"name\":\"uuid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"lastChanged\",\"type\":\"long\"},{\"name\":\"objectNotifiable\",\"type\":\"boolean\"}]}},{\"name\":\"contentEncoding\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"data\",\"type\":\"bytes\"}]}]}]}}}],\"messageType\":\"2\",\"protocol\":\"1\",\"senderRole\":\"producer\",\"protocolRoles\":\"producer,consumer\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> channels;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ChannelMetadata() {}

  /**
   * All-args constructor.
   * @param channels The new value for channels
   */
  public ChannelMetadata(java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> channels) {
    this.channels = channels;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return channels;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: channels = (java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'channels' field.
   * @return The value of the 'channels' field.
   */
  public java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> getChannels() {
    return channels;
  }

  /**
   * Sets the value of the 'channels' field.
   * @param value the value to set.
   */
  public void setChannels(java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> value) {
    this.channels = value;
  }

  /**
   * Creates a new ChannelMetadata RecordBuilder.
   * @return A new ChannelMetadata RecordBuilder
   */
  public static Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder newBuilder() {
    return new Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder();
  }

  /**
   * Creates a new ChannelMetadata RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ChannelMetadata RecordBuilder
   */
  public static Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder newBuilder(Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder other) {
    return new Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder(other);
  }

  /**
   * Creates a new ChannelMetadata RecordBuilder by copying an existing ChannelMetadata instance.
   * @param other The existing instance to copy.
   * @return A new ChannelMetadata RecordBuilder
   */
  public static Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder newBuilder(Energistics.Protocol.ChannelStreaming.ChannelMetadata other) {
    return new Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder(other);
  }

  /**
   * RecordBuilder for ChannelMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChannelMetadata>
    implements org.apache.avro.data.RecordBuilder<ChannelMetadata> {

    private java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> channels;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.channels)) {
        this.channels = data().deepCopy(fields()[0].schema(), other.channels);
        fieldSetFlags()[0] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ChannelMetadata instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Protocol.ChannelStreaming.ChannelMetadata other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.channels)) {
        this.channels = data().deepCopy(fields()[0].schema(), other.channels);
        fieldSetFlags()[0] = true;
      }
    }

    /**
      * Gets the value of the 'channels' field.
      * @return The value.
      */
    public java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> getChannels() {
      return channels;
    }

    /**
      * Sets the value of the 'channels' field.
      * @param value The value of 'channels'.
      * @return This builder.
      */
    public Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder setChannels(java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord> value) {
      validate(fields()[0], value);
      this.channels = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'channels' field has been set.
      * @return True if the 'channels' field has been set, false otherwise.
      */
    public boolean hasChannels() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'channels' field.
      * @return This builder.
      */
    public Energistics.Protocol.ChannelStreaming.ChannelMetadata.Builder clearChannels() {
      channels = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public ChannelMetadata build() {
      try {
        ChannelMetadata record = new ChannelMetadata();
        record.channels = fieldSetFlags()[0] ? this.channels : (java.util.List<Energistics.Datatypes.ChannelData.ChannelMetadataRecord>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
