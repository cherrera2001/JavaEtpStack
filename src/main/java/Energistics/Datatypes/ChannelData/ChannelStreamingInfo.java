/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package Energistics.Datatypes.ChannelData;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ChannelStreamingInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5167144726099145181L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ChannelStreamingInfo\",\"namespace\":\"Energistics.Datatypes.ChannelData\",\"fields\":[{\"name\":\"channelId\",\"type\":\"long\"},{\"name\":\"startIndex\",\"type\":{\"type\":\"record\",\"name\":\"StreamingStartIndex\",\"fields\":[{\"name\":\"item\",\"type\":[\"null\",\"int\",\"long\"]}]}},{\"name\":\"receiveChangeNotification\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long channelId;
  @Deprecated public Energistics.Datatypes.ChannelData.StreamingStartIndex startIndex;
  @Deprecated public boolean receiveChangeNotification;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ChannelStreamingInfo() {}

  /**
   * All-args constructor.
   * @param channelId The new value for channelId
   * @param startIndex The new value for startIndex
   * @param receiveChangeNotification The new value for receiveChangeNotification
   */
  public ChannelStreamingInfo(java.lang.Long channelId, Energistics.Datatypes.ChannelData.StreamingStartIndex startIndex, java.lang.Boolean receiveChangeNotification) {
    this.channelId = channelId;
    this.startIndex = startIndex;
    this.receiveChangeNotification = receiveChangeNotification;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return channelId;
    case 1: return startIndex;
    case 2: return receiveChangeNotification;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: channelId = (java.lang.Long)value$; break;
    case 1: startIndex = (Energistics.Datatypes.ChannelData.StreamingStartIndex)value$; break;
    case 2: receiveChangeNotification = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'channelId' field.
   * @return The value of the 'channelId' field.
   */
  public java.lang.Long getChannelId() {
    return channelId;
  }

  /**
   * Sets the value of the 'channelId' field.
   * @param value the value to set.
   */
  public void setChannelId(java.lang.Long value) {
    this.channelId = value;
  }

  /**
   * Gets the value of the 'startIndex' field.
   * @return The value of the 'startIndex' field.
   */
  public Energistics.Datatypes.ChannelData.StreamingStartIndex getStartIndex() {
    return startIndex;
  }

  /**
   * Sets the value of the 'startIndex' field.
   * @param value the value to set.
   */
  public void setStartIndex(Energistics.Datatypes.ChannelData.StreamingStartIndex value) {
    this.startIndex = value;
  }

  /**
   * Gets the value of the 'receiveChangeNotification' field.
   * @return The value of the 'receiveChangeNotification' field.
   */
  public java.lang.Boolean getReceiveChangeNotification() {
    return receiveChangeNotification;
  }

  /**
   * Sets the value of the 'receiveChangeNotification' field.
   * @param value the value to set.
   */
  public void setReceiveChangeNotification(java.lang.Boolean value) {
    this.receiveChangeNotification = value;
  }

  /**
   * Creates a new ChannelStreamingInfo RecordBuilder.
   * @return A new ChannelStreamingInfo RecordBuilder
   */
  public static Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder newBuilder() {
    return new Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder();
  }

  /**
   * Creates a new ChannelStreamingInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ChannelStreamingInfo RecordBuilder
   */
  public static Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder newBuilder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder other) {
    return new Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder(other);
  }

  /**
   * Creates a new ChannelStreamingInfo RecordBuilder by copying an existing ChannelStreamingInfo instance.
   * @param other The existing instance to copy.
   * @return A new ChannelStreamingInfo RecordBuilder
   */
  public static Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder newBuilder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo other) {
    return new Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder(other);
  }

  /**
   * RecordBuilder for ChannelStreamingInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ChannelStreamingInfo>
    implements org.apache.avro.data.RecordBuilder<ChannelStreamingInfo> {

    private long channelId;
    private Energistics.Datatypes.ChannelData.StreamingStartIndex startIndex;
    private Energistics.Datatypes.ChannelData.StreamingStartIndex.Builder startIndexBuilder;
    private boolean receiveChangeNotification;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[1].schema(), other.startIndex);
        fieldSetFlags()[1] = true;
      }
      if (other.hasStartIndexBuilder()) {
        this.startIndexBuilder = Energistics.Datatypes.ChannelData.StreamingStartIndex.newBuilder(other.getStartIndexBuilder());
      }
      if (isValidValue(fields()[2], other.receiveChangeNotification)) {
        this.receiveChangeNotification = data().deepCopy(fields()[2].schema(), other.receiveChangeNotification);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ChannelStreamingInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(Energistics.Datatypes.ChannelData.ChannelStreamingInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.channelId)) {
        this.channelId = data().deepCopy(fields()[0].schema(), other.channelId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startIndex)) {
        this.startIndex = data().deepCopy(fields()[1].schema(), other.startIndex);
        fieldSetFlags()[1] = true;
      }
      this.startIndexBuilder = null;
      if (isValidValue(fields()[2], other.receiveChangeNotification)) {
        this.receiveChangeNotification = data().deepCopy(fields()[2].schema(), other.receiveChangeNotification);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'channelId' field.
      * @return The value.
      */
    public java.lang.Long getChannelId() {
      return channelId;
    }

    /**
      * Sets the value of the 'channelId' field.
      * @param value The value of 'channelId'.
      * @return This builder.
      */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder setChannelId(long value) {
      validate(fields()[0], value);
      this.channelId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'channelId' field has been set.
      * @return True if the 'channelId' field has been set, false otherwise.
      */
    public boolean hasChannelId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'channelId' field.
      * @return This builder.
      */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder clearChannelId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'startIndex' field.
      * @return The value.
      */
    public Energistics.Datatypes.ChannelData.StreamingStartIndex getStartIndex() {
      return startIndex;
    }

    /**
      * Sets the value of the 'startIndex' field.
      * @param value The value of 'startIndex'.
      * @return This builder.
      */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder setStartIndex(Energistics.Datatypes.ChannelData.StreamingStartIndex value) {
      validate(fields()[1], value);
      this.startIndexBuilder = null;
      this.startIndex = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'startIndex' field has been set.
      * @return True if the 'startIndex' field has been set, false otherwise.
      */
    public boolean hasStartIndex() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'startIndex' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public Energistics.Datatypes.ChannelData.StreamingStartIndex.Builder getStartIndexBuilder() {
      if (startIndexBuilder == null) {
        if (hasStartIndex()) {
          setStartIndexBuilder(Energistics.Datatypes.ChannelData.StreamingStartIndex.newBuilder(startIndex));
        } else {
          setStartIndexBuilder(Energistics.Datatypes.ChannelData.StreamingStartIndex.newBuilder());
        }
      }
      return startIndexBuilder;
    }

    /**
     * Sets the Builder instance for the 'startIndex' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder setStartIndexBuilder(Energistics.Datatypes.ChannelData.StreamingStartIndex.Builder value) {
      clearStartIndex();
      startIndexBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'startIndex' field has an active Builder instance
     * @return True if the 'startIndex' field has an active Builder instance
     */
    public boolean hasStartIndexBuilder() {
      return startIndexBuilder != null;
    }

    /**
      * Clears the value of the 'startIndex' field.
      * @return This builder.
      */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder clearStartIndex() {
      startIndex = null;
      startIndexBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'receiveChangeNotification' field.
      * @return The value.
      */
    public java.lang.Boolean getReceiveChangeNotification() {
      return receiveChangeNotification;
    }

    /**
      * Sets the value of the 'receiveChangeNotification' field.
      * @param value The value of 'receiveChangeNotification'.
      * @return This builder.
      */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder setReceiveChangeNotification(boolean value) {
      validate(fields()[2], value);
      this.receiveChangeNotification = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'receiveChangeNotification' field has been set.
      * @return True if the 'receiveChangeNotification' field has been set, false otherwise.
      */
    public boolean hasReceiveChangeNotification() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'receiveChangeNotification' field.
      * @return This builder.
      */
    public Energistics.Datatypes.ChannelData.ChannelStreamingInfo.Builder clearReceiveChangeNotification() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public ChannelStreamingInfo build() {
      try {
        ChannelStreamingInfo record = new ChannelStreamingInfo();
        record.channelId = fieldSetFlags()[0] ? this.channelId : (java.lang.Long) defaultValue(fields()[0]);
        if (startIndexBuilder != null) {
          record.startIndex = this.startIndexBuilder.build();
        } else {
          record.startIndex = fieldSetFlags()[1] ? this.startIndex : (Energistics.Datatypes.ChannelData.StreamingStartIndex) defaultValue(fields()[1]);
        }
        record.receiveChangeNotification = fieldSetFlags()[2] ? this.receiveChangeNotification : (java.lang.Boolean) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
